{"version":3,"sources":["components/Button.js","components/ImageViewer.js","components/CircleButton.js","components/IconButton.js","components/EmojiPicker.js","components/EmojiList.js","components/EmojiSticker.js","App.js","assets/images/emoji1.png","assets/images/emoji2.png","assets/images/emoji3.png","assets/images/emoji4.png","assets/images/emoji5.png","assets/images/emoji6.png","assets/images/background-image.png"],"names":["Button","label","theme","onPress","View","style","styles","buttonContainer","borderWidth","borderColor","borderRadius","Pressable","button","backgroundColor","FontAwesome","name","size","color","buttonIcon","Text","buttonLabel","StyleSheet","create","width","height","marginHorizontal","alignItems","justifyContent","padding","flexDirection","paddingRight","fontSize","ImageViewer","placeholderImageSource","selectedImage","imageSource","uri","Image","source","image","CircleButton","circleButtonContainer","circleButton","MaterialIcons","flex","IconButton","icon","iconButton","iconButtonLabel","marginTop","EmojiPicker","isVisible","children","onClose","Modal","animationType","transparent","visible","modalContent","titleContainer","title","borderTopRightRadius","borderTopLeftRadius","position","bottom","paddingHorizontal","pickerContainer","paddingVertical","EmojiList","onSelect","onCloseModal","useState","require","emoji","FlatList","horizontal","showsHorizontalScrollIndicator","Platform","OS","data","contentContainerStyle","listContainer","renderItem","item","index","marginRight","EmojiSticker","imageSize","stickerSource","top","resizeMode","PlaceholderImage","App","pickedEmoji","setPickedEmoji","showAppOptions","setShowAppOptions","isModalVisible","setIsModalVisible","setSelectedImage","onSaveImageAsync","onModalClose","pickImageAsync","result","ImagePicker","allowsEditing","quality","canceled","alert","assets","container","imageContainer","optionsContainer","optionsRow","footerContainer","StatusBar","paddingTop","module","exports"],"mappings":"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","file":"static/js/app.510dd9b5.chunk.js","sourcesContent":["import { StyleSheet, View, Pressable, Text } from \"react-native\";\r\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\r\n\r\nexport default function Button({ label, theme, onPress }) {\r\n  if (theme === \"primary\") {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.buttonContainer,\r\n          { borderWidth: 4, borderColor: \"#ffd33d\", borderRadius: 18 },\r\n        ]}\r\n      >\r\n        <Pressable\r\n          style={[styles.button, { backgroundColor: \"#fff\" }]}\r\n          onPress={onPress}\r\n        >\r\n          <FontAwesome\r\n            name=\"picture-o\"\r\n            size={18}\r\n            color=\"#25292e\"\r\n            style={styles.buttonIcon}\r\n          />\r\n          <Text style={[styles.buttonLabel, { color: \"#25292e\" }]}>\r\n            {label}\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    width: 320,\r\n    height: 68,\r\n    marginHorizontal: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 3,\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonIcon: {\r\n    paddingRight: 8,\r\n  },\r\n  buttonLabel: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import { StyleSheet, Image } from \"react-native\";\r\n\r\nexport default function ImageViewer({ placeholderImageSource, selectedImage }) {\r\n  const imageSource =\r\n    selectedImage !== null ? { uri: selectedImage } : placeholderImageSource;\r\n\r\n  return <Image source={imageSource} style={styles.image} />;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n  },\r\n});\r\n","import { View, Pressable, StyleSheet } from \"react-native\";\r\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\r\n\r\nexport default function CircleButton({ onPress }) {\r\n  return (\r\n    <View style={styles.circleButtonContainer}>\r\n      <Pressable style={styles.circleButton} onPress={onPress}>\r\n        <MaterialIcons name=\"add\" size={38} color=\"#25292e\" />\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  circleButtonContainer: {\r\n    width: 84,\r\n    height: 84,\r\n    marginHorizontal: 60,\r\n    borderWidth: 4,\r\n    borderColor: \"#ffd33d\",\r\n    borderRadius: 42,\r\n    padding: 3,\r\n  },\r\n  circleButton: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 42,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n});\r\n","import { Pressable, StyleSheet, Text } from \"react-native\";\r\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\r\n\r\nexport default function IconButton({ icon, label, onPress }) {\r\n  return (\r\n    <Pressable style={styles.iconButton} onPress={onPress}>\r\n      <MaterialIcons name={icon} size={24} color=\"#fff\" />\r\n      <Text style={styles.iconButtonLabel}>{label}</Text>\r\n    </Pressable>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  iconButton: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconButtonLabel: {\r\n    color: \"#fff\",\r\n    marginTop: 12,\r\n  },\r\n});\r\n","import { Modal, View, Text, Pressable, StyleSheet } from \"react-native\";\r\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\r\n\r\nexport default function EmojiPicker({ isVisible, children, onClose }) {\r\n  return (\r\n    <Modal animationType=\"slide\" transparent={true} visible={isVisible}>\r\n      <View style={styles.modalContent}>\r\n        <View style={styles.titleContainer}>\r\n          <Text style={styles.title}>Choose a sticker</Text>\r\n          <Pressable onPress={onClose}>\r\n            <MaterialIcons name=\"close\" color=\"#fff\" size={22} />\r\n          </Pressable>\r\n        </View>\r\n        {children}\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContent: {\r\n    height: \"25%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#25292e\",\r\n    borderTopRightRadius: 18,\r\n    borderTopLeftRadius: 18,\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n  },\r\n  titleContainer: {\r\n    height: \"16%\",\r\n    backgroundColor: \"#464C55\",\r\n    borderTopRightRadius: 10,\r\n    borderTopLeftRadius: 10,\r\n    paddingHorizontal: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n  pickerContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 20,\r\n  },\r\n});\r\n","import { useState } from \"react\";\r\nimport { StyleSheet, FlatList, Image, Platform, Pressable } from \"react-native\";\r\n\r\nexport default function EmojiList({ onSelect, onCloseModal }) {\r\n  const [emoji] = useState([\r\n    require(\"../assets/images/emoji1.png\"),\r\n    require(\"../assets/images/emoji2.png\"),\r\n    require(\"../assets/images/emoji3.png\"),\r\n    require(\"../assets/images/emoji4.png\"),\r\n    require(\"../assets/images/emoji5.png\"),\r\n    require(\"../assets/images/emoji6.png\"),\r\n  ]);\r\n\r\n  return (\r\n    <FlatList\r\n      horizontal\r\n      showsHorizontalScrollIndicator={Platform.OS === \"web\" ? true : false}\r\n      data={emoji}\r\n      contentContainerStyle={styles.listContainer}\r\n      renderItem={({ item, index }) => {\r\n        return (\r\n          <Pressable\r\n            onPress={() => {\r\n              onSelect(item);\r\n              onCloseModal();\r\n            }}\r\n          >\r\n            <Image source={item} key={index} style={styles.image} />\r\n          </Pressable>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  listContainer: {\r\n    borderTopRightRadius: 10,\r\n    borderTopLeftRadius: 10,\r\n    paddingHorizontal: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    marginRight: 20,\r\n  },\r\n});\r\n","import { View, Image } from \"react-native\";\r\n\r\nexport default function EmojiSticker({ imageSize, stickerSource }) {\r\n  return (\r\n    <View style={{ top: -350 }}>\r\n      <Image\r\n        source={stickerSource}\r\n        resizeMode=\"contain\"\r\n        style={{ width: imageSize, height: imageSize }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View } from \"react-native\";\nimport Button from \"./components/Button\";\nimport ImageViewer from \"./components/ImageViewer\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport CircleButton from \"./components/CircleButton\";\nimport IconButton from \"./components/IconButton\";\nimport EmojiPicker from \"./components/EmojiPicker\";\nimport EmojiList from \"./components/EmojiList\";\nimport EmojiSticker from \"./components/EmojiSticker\";\n\nconst PlaceholderImage = require(\"./assets/images/background-image.png\");\n\nexport default function App() {\n  const [pickedEmoji, setPickedEmoji] = useState(null);\n  const [showAppOptions, setShowAppOptions] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const onReset = () => {\n    setShowAppOptions(false);\n  };\n\n  const onSaveImageAsync = async () => {\n    // we will implement this later\n  };\n\n  const onAddSticker = () => {\n    setIsModalVisible(true);\n  };\n\n  const onModalClose = () => {\n    setIsModalVisible(false);\n  };\n\n  const pickImageAsync = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setSelectedImage(result.assets[0].uri);\n      setShowAppOptions(true);\n    } else {\n      alert(\"You did not select any image.\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.imageContainer}>\n        <ImageViewer\n          placeholderImageSource={PlaceholderImage}\n          selectedImage={selectedImage}\n        />\n        {pickedEmoji !== null ? (\n          <EmojiSticker imageSize={40} stickerSource={pickedEmoji} />\n        ) : null}\n      </View>\n      {showAppOptions ? (\n        <View style={styles.optionsContainer}>\n          <View style={styles.optionsRow}>\n            <IconButton icon=\"refresh\" label=\"Reset\" onPress={onReset} />\n            <CircleButton onPress={onAddSticker} />\n            <IconButton\n              icon=\"save-alt\"\n              label=\"Save\"\n              onPress={onSaveImageAsync}\n            />\n          </View>\n        </View>\n      ) : (\n        <View style={styles.footerContainer}>\n          <Button\n            theme=\"primary\"\n            label=\"Choose a photo\"\n            onPress={pickImageAsync}\n          />\n          <Button\n            label=\"Use this photo\"\n            onPress={() => setShowAppOptions(true)}\n          />\n        </View>\n      )}\n      <EmojiPicker isVisible={isModalVisible} onClose={onModalClose}>\n        <EmojiList onSelect={setPickedEmoji} onCloseModal={onModalClose} />\n      </EmojiPicker>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#25292e\",\n    alignItems: \"center\",\n  },\n  imageContainer: {\n    flex: 1,\n    paddingTop: 58,\n  },\n  image: {\n    width: 320,\n    height: 440,\n    borderRadius: 18,\n  },\n  footerContainer: {\n    flex: 1 / 3,\n    alignItems: \"center\",\n  },\n  optionsContainer: {\n    position: \"absolute\",\n    bottom: 80,\n  },\n  optionsRow: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/emoji1.7df01aee.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji2.5685d9a2.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji3.d02b4d80.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji4.9f86a388.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji5.3ca0d7e3.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji6.e2cad3fa.png\";","module.exports = __webpack_public_path__ + \"static/media/background-image.979cd865.png\";"],"sourceRoot":""}